[{"C:\\Users\\Sathya\\Desktop\\screen2\\src\\index.js":"1","C:\\Users\\Sathya\\Desktop\\screen2\\src\\App.js":"2","C:\\Users\\Sathya\\Desktop\\screen2\\src\\CompleteIds.js":"3","C:\\Users\\Sathya\\Desktop\\screen2\\src\\IncompleteIds.js":"4","C:\\Users\\Sathya\\Desktop\\screen2\\src\\NavTopBar.js":"5","C:\\Users\\Sathya\\Desktop\\screen2\\src\\Data.js":"6","C:\\Users\\Sathya\\Desktop\\screen2\\src\\Data2.js":"7"},{"size":198,"mtime":1612012584120,"results":"8","hashOfConfig":"9"},{"size":489,"mtime":1612019475327,"results":"10","hashOfConfig":"9"},{"size":4415,"mtime":1612027252399,"results":"11","hashOfConfig":"9"},{"size":4322,"mtime":1612027309288,"results":"12","hashOfConfig":"9"},{"size":767,"mtime":1612019562655,"results":"13","hashOfConfig":"9"},{"size":72964,"mtime":1612019851032,"results":"14","hashOfConfig":"9"},{"size":73001,"mtime":1612027238056,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oaj706",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sathya\\Desktop\\screen2\\src\\index.js",[],["32","33"],"C:\\Users\\Sathya\\Desktop\\screen2\\src\\App.js",["34","35"],"C:\\Users\\Sathya\\Desktop\\screen2\\src\\CompleteIds.js",["36","37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport { results } from \"./Data\";\r\n\r\nfunction CompleteIds() {\r\n  const [data, setData] = useState(results);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [id, newId] = useState();\r\n  // update states\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  //\r\n  const deleteHandler = (id) => {\r\n    console.log(typeof id);\r\n    setData(data.filter((ele) => ele.login.uuid != id));\r\n  };\r\n  const preUpdateHandler = (id) => {\r\n    newId(id);\r\n    setShowModal(true);\r\n\r\n    const getData = data.find((ele) => ele.login.uuid == id);\r\n\r\n    setName(getData.name.first);\r\n    setGender(getData.gender);\r\n    setLocation(getData.location.street.name);\r\n    setAge(getData.dob.age);\r\n    setPhone(getData.phone);\r\n    setEmail(getData.email);\r\n  };\r\n\r\n  const updateBtnHandler = () => {\r\n    setShowModal(false);\r\n    setData(\r\n      data.map((ele) =>\r\n        ele.login.uuid == id\r\n          ? {\r\n              ...ele,\r\n                  name: {\r\n                  ...ele.name,\r\n                first: name,\r\n              },\r\n              gender: gender,\r\n              location: {\r\n                street: {\r\n                  ...ele.location.street,\r\n                  name: location,\r\n                },\r\n              },\r\n                  dob: {\r\n                  ...ele.dob,\r\n                age: age,\r\n              },\r\n              phone: phone,\r\n              email: email,\r\n            }\r\n          : ele\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`container ${showModal ? \"contain\" : \"\"}`}>\r\n        {data.map((ele) => (\r\n          <div key={ele.login.uuid} className=\"cardss\">\r\n            <div className=\"img\">\r\n              <img src={ele.picture.large} alt=\"\" />\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <h3>{ele.name.first}</h3>\r\n              <h6>Gender : {ele.gender}</h6>\r\n              <h6>location : {ele.location.street.name}</h6>\r\n              <h6>locationNum : {ele.location.street.number}</h6>\r\n              <span>Age : {ele.dob.age}</span>\r\n              <h6>phone : {ele.phone}</h6>\r\n              <h6>email : {ele.email}</h6>\r\n              <div className=\"btns\">\r\n                <button onClick={() => deleteHandler(ele.login.uuid)}>\r\n                  Delete\r\n                </button>\r\n                <button onClick={() => preUpdateHandler(ele.login.uuid)}>\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={`modall ${showModal ? \"show\" : \"hide\"}`}>\r\n        <span className=\"delete\" onClick={() => setShowModal(false)}>\r\n          x\r\n        </span>\r\n        <h5>Update Value</h5>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"name\">gender</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter gender\"\r\n          value={gender}\r\n          onChange={(e) => setGender(e.target.value)}\r\n        />\r\n        <label htmlFor=\"name\">location</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter location\"\r\n          value={location}\r\n          onChange={(e) => setLocation(e.target.value)}\r\n        />\r\n        <label htmlFor=\"name\">age</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter age\"\r\n          value={age}\r\n          onChange={(e) => setAge(e.target.value)}\r\n        />\r\n        <label htmlFor=\"name\">phone</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter phone\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n        />\r\n        <label htmlFor=\"name\">email</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <button className=\"btns\" onClick={() => updateBtnHandler()}>\r\n          Update Value\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompleteIds;\r\n","C:\\Users\\Sathya\\Desktop\\screen2\\src\\IncompleteIds.js",["40","41","42","43"],"C:\\Users\\Sathya\\Desktop\\screen2\\src\\NavTopBar.js",["44"],"C:\\Users\\Sathya\\Desktop\\screen2\\src\\Data.js",[],"C:\\Users\\Sathya\\Desktop\\screen2\\src\\Data2.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":2,"column":35,"nodeType":"51","messageId":"52","endLine":2,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":19,"column":49,"nodeType":"56","messageId":"57","endLine":19,"endColumn":51},{"ruleId":"54","severity":1,"message":"58","line":25,"column":55,"nodeType":"56","messageId":"57","endLine":25,"endColumn":57},{"ruleId":"54","severity":1,"message":"58","line":39,"column":24,"nodeType":"56","messageId":"57","endLine":39,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":18,"column":49,"nodeType":"56","messageId":"57","endLine":18,"endColumn":51},{"ruleId":"54","severity":1,"message":"58","line":24,"column":55,"nodeType":"56","messageId":"57","endLine":24,"endColumn":57},{"ruleId":"54","severity":1,"message":"58","line":38,"column":24,"nodeType":"56","messageId":"57","endLine":38,"endColumn":26},{"ruleId":"49","severity":1,"message":"59","line":2,"column":34,"nodeType":"51","messageId":"52","endLine":2,"endColumn":41},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]